openapi: 3.0.3
info:
  title: CivicSage
  description: |
    CivicSage is a service that allows you to index files and websites.
  version: 0.3.0

paths:
  /index/file:
    post:
      summary: Index new files
      description: |
        This endpoint allows you to index new files by uploading them.
      operationId: IndexFiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - fileId
                properties:
                  fileId:
                    type: string
                    format: uuid
                    description: The id returned by the upload endpoint
                  title:
                    type: string
                    description: |
                      The title of the file used in search results.
                      Defaults to the file name without the file ending.
                  date:
                    type: string
                    format: date
                    description: |
                      A date associated with the file.
                      This can be used to filter search results by date.
                additionalProperties: true
      responses:
        '200':
          description: Indexing successful
        '202':
          description: Indexing accepted, processing in background since it takes too long
        '400':
          description: Bad request
        '409':
          description: File already indexed
        '500':
          description: Internal server error
  /index/url:
    post:
      summary: Index Website
      description: |
        This endpoint allows you to index a website by providing its URL.
        The service will only index the site the url points to.
        It will not follow links.
      operationId: IndexWebsite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  description: The URL of the website to index
                date:
                  type: string
                  format: date
                  description: |
                    A date associated with the file.
                    This can be used to filter search results by date.
              additionalProperties: true
      responses:
        '200':
          description: Indexing successful
        '202':
          description: Indexing accepted, processing in background since it takes too long
        '400':
          description: Bad request
        '409':
          description: Website already indexed
        '500':
          description: Internal server error
  /search:
    post:
      summary: Search for files
      description: |
        This endpoint allows you to search for indexed files.
        You can specify the page number and size for pagination.
        The search query is required in the request body.
      operationId: SearchFiles
      parameters:
        - name: pageNumber
          in: query
          description: Page number
          required: false
          schema:
            default: 0
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          required: false
          schema:
            default: 20
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchQuery'
      responses:
        '200':
          description: Search successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/searchResult'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /files:
    get:
      summary: Download file
      description: |
        This endpoint provides the specified file as a download.
      operationId: downloadFile
      parameters:
        - in: query
          name: id
          description: |
            The identifier for the file to download.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: |
                The Content-Disposition header is used to specify the file name
                when the file is downloaded.
              schema:
                type: string
                example: attachment; filename="downloaded_file.txt"
        '404':
          description: File not found
    post:
      summary: Upload file
      description: |
        This endpoint you to upload a file for indexing.
        This endpoint will **not** index the file.
        It is only for uploading files that you want to index later.
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /feedback:
    post:
      summary: Submit feedback
      description: |
        This endpoint allows you to submit feedback.
        The feedback can be an arbitrary string.
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedback'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /system/info:
    get:
      summary: Get system information
      description: |
        This endpoint provides information about the system.
      operationId: getSystemInfo
      responses:
        '200':
          description: System information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemInfo'
  /system/metadata-keys:
    get:
      summary: Get metadata keys
      description: |
        This endpoint provides the metadata keys that are supported for searching.
        This list includes custom keys provided via additional properties.
        All keys are complete. So there is no need to add `additionalProperties.` for custom keys.
      operationId: getMetadataKeys
      responses:
        '200':
          description: Metadata keys retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: string
  /completions/summary:
    post:
      summary: Summarize embeddings with a prompt
      description: |
        This endpoint allows you to summarize embeddings using a prompt.
        The prompt is used to generate a summary of the embeddings.
      operationId: summarizeEmbeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documentIds
                - prompt
              properties:
                documentIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Ids of the documents to summarize
                prompt:
                  type: string
                  description: The prompt to use for summarizing the embeddings
                systemPrompt:
                  type: string
                  description: The system prompt
      responses:
        '200':
          description: Summary generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: The generated summary of the embeddings
        '400':
          description: Bad request
        '404':
          description: Document not found
        '500':
          description: Internal server error
  /sources:
    get:
      summary: Get all indexed sources
      description: |
        This endpoint retrieves a list of all indexed sources, including files and websites.
      operationId: getAllIndexedSources
      parameters:
        - in: query
          name: filterExpression
          description: |
            An optional filter expression to filter the indexed sources.
            This can be used to filter results based on specific criteria.
            The syntax of the filter expression can be found in the server documentation.
          schema:
            type: string
      responses:
        '200':
          description: Indexed sources retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    $ref: '#/components/schemas/fileSource'
                  websites:
                    $ref: '#/components/schemas/websiteSource'
        '500':
          description: Internal server error
    delete:
      summary: Delete indexed source
      description: |
        This endpoint allows you to delete an indexed source by its ID.
        The ID can be either a fileId or a websiteId.
        If deleting a file, the file will be removed from storage.
      operationId: deleteIndexedSource
      parameters:
        - in: query
          name: id
          description: |
            The identifier for the source to delete.
            This can be either a fileId or a websiteId.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '204':
          description: Source deleted successfully
        '404':
          description: Source not found
        '500':
          description: Internal server error

components:
  schemas:
    searchQuery:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The search query to find indexed files
        filterExpression:
          type: string
          description: |
            An optional filter expression to filter the search results.
            This can be used to filter results based on specific criteria.
            The syntax of the filter expression can be found in the server documentation.
    searchResult:
      type: object
      description: |
        Additional properties:
         - none yet
      required:
        - documentId
        - title
        - text
        - score
      properties:
        documentId:
          type: string
          format: uuid
          description: |
            This identifies this text.
        fileName:
          type: string
          description: |
            The name of the file that was indexed.
            If this is present, it means the result is from a file.
        fileId:
          type: string
          format: uuid
          description: |
            The identifier for the file that was indexed.
            If this is present, it means the result is from a file.
        url:
          type: string
          description: |
            The URL of the website that was indexed.
            If this is present, it means the result is from a website.
        title:
          type: string
          description: |
            The title of the source.
        text:
          type: string
          description: |
            The text content of the indexed file or website.
            This is the embedded text that matched the search query.
        score:
          type: number
          format: double
          description: |
            The score of the search result.
            This is a measure of how well the result matches the search query.
            Higher scores indicate better matches.
            The value is between 0 and 1, where 1 is a perfect match.
      additionalProperties: true
    feedback:
      description: This represents a feedback message.
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1
          description: |
            The content of the feedback message.
            This can be an arbitrary string.
    systemInfo:
      type: object
      required:
        - serverVersion
        - apiVersion
        - embeddingContextWindow
        - chatContextWindow
        - maxEmbeddingsInChat
        - supportedFileEndings
        - maxFileSize
      properties:
        serverVersion:
          type: string
          description: The version of the server
        apiVersion:
          type: string
          description: The version of the API implemented by the server
        embeddingContextWindow:
          type: integer
          description: The context window size used for embeddings
        chatContextWindow:
          type: integer
          description: The context window size used for chat interactions
        maxEmbeddingsInChat:
          type: integer
          description: The maximum number of embeddings that can be used in a chat
        supportedFileEndings:
          type: array
          items:
            type: string
          description: The file endings that are supported for indexing.
        maxFileSize:
          type: integer
          description: The maximum file size that can be uploaded for indexing, in megabytes.
        metadataKeys:
          type: array
          items:
            type: string
          description: |
            The metadata keys that are supported for indexing.
            These keys can be used to filter search results.
            Custom properties are not in this list but can be reached via the additional properties key.
    fileSource:
      type: array
      items:
        type: object
        required:
          - fileId
          - fileName
          - title
        properties:
          fileId:
            type: string
            format: uuid
            description: The unique identifier for the indexed file
          fileName:
            type: string
            description: The name of the indexed file
          title:
            type: string
            description: The title of the indexed file, used in search results
        additionalProperties: true
    websiteSource:
      type: object
      required:
        - websiteId
        - url
        - title
      properties:
        websiteId:
          type: string
          format: uuid
          description: The unique identifier for the indexed website
        url:
          type: string
          description: The URL of the indexed website
        title:
          type: string
          description: The name of the indexed website
      additionalProperties: true
